# GLOBAL #
##########

global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\end{tabular}\n$0"
	snip.expand_anon(final_str)

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"
	snip.expand_anon(final_str)

def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'	

endglobal


###############
# ENVIRONMENT #
###############


snippet plantilla "Plantilla" bi
\documentclass[letterpaper]{report}
\usepackage[spanish]{babel}
\usepackage{geometry}
\geometry{top=1.5cm, bottom=2.5cm, left=2.5cm, right=2.5cm}
\usepackage{setspace}
\setlength{\parindent}{0cm}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{setspace} 
\usepackage{amsmath,amsfonts,amssymb,mathtools}
\usepackage{graphicx,float}
\newtheorem{ejemplo}{Ejemplo}
\newtheorem{teorema}{Teorema}
\newtheorem{corolario}{Corolario}
\newtheorem{preposicion}{Preposici\'on}
\newtheorem{lema}{Lema}
\newtheorem{definicion}{Definici\'on}
\newtheorem{nota}{Nota}
\newtheorem{notacion}{Notaci\'on}
\newtheorem{conclusion}{Conclusi\'on}
\usepackage[dvipsnames]{xcolor}
\usepackage{tcolorbox}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{import}
\usepackage{pdfpages}
\usepackage{transparent} 
${1:\title{$2}
\author{Diego Eduardo Hernández Cerda\\\
  \small Universidad Autónoma de México\\\
  \small eduardohdz02@ciencias.unam.mx\\\
  \small Ciudad de México
  \date{$3}
}}
\newcommand{\incfig}[2][1]{%
    \def\svgwidth{#1\columnwidth}
    \import{./figures/}{#2.pdf_tex}
}  

${0:${VISUAL}}


endsnippet


snippet portada "Portada" bi
\begin{titlepage}	
	\begin{figure}[ht]
	   \minipage{0.76\textwidth}
			\includegraphics[width=3.8cm]{/Users/diego/.config/nvim/NotasFac/ciencias.png}
			\label{EscudoUNAM}
	   \endminipage
	   \minipage{0.32\textwidth}
			\includegraphics[height = 4.43cm ,width=4.43cm]{/Users/diego/.config/nvim/NotasFac/unam.png}
			\label{EscudoFC}
		\endminipage
	\end{figure}
	
	\centering
\vspace{1cm}
\centering
{\bfseries\huge Universidad Nacional Autónoma de México \par}
\vspace{2cm}
{\scshape\huge Facultad de Ciencias \par}
\vspace{3cm}
{\scshape\huge ${1:Titulo} \par}
\vspace{3cm}
{\huge Diego Eduardo Hernández Cerda \par}
\vspace{3cm}
{\huge ${2:Fecha} \par}
\end{titlepage}
endsnippet


snippet confcodigo "Configuracion codigo en latex"
\usepackage{listings}
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
\lstdefinestyle{mystyle}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2
}
\lstset{style=mystyle}
endsnippet

snippet 2fig
\begin{figure}[!tbp]
  \begin{subfigure}[b]{0.49\textwidth}
    \includegraphics[width=\textwidth, height=\textwidth]{$1}
    \caption{$2}
  \end{subfigure}
  \hfill
  \begin{subfigure}[b]{0.49\textwidth}
    \includegraphics[width=\textwidth, height=\textwidth]{$3}
    \caption{$4}
  \end{subfigure}
  \caption{$5}
\end{figure}
endsnippet

snippet 3fig
\begin{figure}[!tbp]
  \begin{subfigure}[b]{0.49\textwidth}
    \includegraphics[width=\textwidth, height=\textwidth]{$1}
    \caption{$2}
  \end{subfigure}
  \hfill
  \begin{subfigure}[b]{0.49\textwidth}
    \includegraphics[width=\textwidth, height=\textwidth]{$3}
    \caption{$4}
  \end{subfigure}
  \begin{subfigure}[b]{0.49\textwidth}
    \includegraphics[width=\textwidth, height=\textwidth]{$5}
    \caption{$6}
  \end{subfigure} 
  \caption{$7}
\end{figure}
endsnippet

context "math()"
snippet rho "\rho" iA
\rho
endsnippet

context "math()"
snippet tta "\theta" iA
\theta
endsnippet

snippet beg "begin{} / end{}" bi
\begin{$1}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet cnt "Center" bi
\begin{center}
	${0:${VISUAL}}
\end{center}
endsnippet

snippet desc "Description" bi
\begin{description}
	\item[${1:${VISUAL}}] $0
\end{description}
endsnippet

snippet lema "Lemma" bi
\begin{tcolorbox}[colback=Salmon!5, colframe=Salmon!90]
\begin{lema}
	${2:${VISUAL}}
\end{lema}
\end{tcolorbox}
endsnippet

snippet pre "Proposition" bi
\begin{tcolorbox}[colback=Salmon!5, colframe=Salmon!90]
\begin{preposicion}[$1]
	${0:${VISUAL}}
\end{preposicion}
\end{tcolorbox}
endsnippet

snippet teo "Theorem" bi
\begin{tcolorbox}[colback=Salmon!5,colframe=Salmon!90]
\begin{teorema}[$1]
	${0:${VISUAL}}
\end{teorema}
\end{tcolorbox}
endsnippet

snippet def "Definition" bi
\begin{tcolorbox}[colback=Salmon!5,colframe=Salmon!90]
\begin{definicion}[$1]
	${0:${VISUAL}}
\end{tcolorbox}
\end{definicion}
endsnippet

snippet bcodigo "Caja codigo" bi
\begin{tcolorbox}[colback=Salom!5, colframe=Salmon!90, title=Código ${1:}, center title, fonttitle=\bfseries]
\begin{lstlisting}[language=${2:Python}]
${0:}
\end{lstlisting}  
\end{tcolorbox}
endsnippet

snippet dem "Prueba" bi
\begin{demostracion}
	${0:${VISUAL}} 
\end{demostracion} 
endsnippet

snippet nota "Note" bi
\begin{tcolorbox}[colback=Salmon!5,colframe=Salmon!90] 
\begin{nota}[$1]
	${0:${VISUAL}}
\end{nota}
\end{tcolorbox}
endsnippet

snippet prob "Problem" bi
\begin{problem}[$1]
	${0:${VISUAL}}
\end{problem}
endsnippet

snippet coro "Corollary" bi
\begin{tcolorbox}[colback=Salmon!5,colframe=Salmon!90]
\begin{corolario}[$1]
	${0:${VISUAL}}
\end{corolario}
\end{tcolorbox}
endsnippet

snippet ejem "Example" bi
\begin{ejemplo}[$1]
	${0:${VISUAL}}
\end{ejemplo}
endsnippet

snippet notacion "Notation" bi
\begin{notacion}[$1]     
	$0${VISUAL}
\end{notacion}
endsnippet

snippet conc "Conclusion" bi
\begin{conclusion}[$1]
	$0${VISUAL}
\end{conclusion}
endsnippet

snippet fig "Figure environment" bi
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{$4}
\end{figure}
endsnippet

snippet tcolor "Caja" bi
\begin{tcolorbox}[colback=Salmon!5, colframe=Salmon!90, title=${1:},fonttitle=\bfseries, center title]
${0:}
\tcbsubtitle{}
\end{tcolorbox}
endsnippet

snippet enum "Enumerate" bi
\begin{enumerate}
	\item ${0:${VISUAL}}
\end{enumerate}
endsnippet

snippet item "Itemize" bi
\begin{itemize}
	\item ${0:${VISUAL}}
\end{itemize}
endsnippet

snippet case "cases" bi
\begin{cases}
	${0:${VISUAL}}
\end{cases}
endsnippet

snippet abs "abstract environment" b
\begin{abstract}
	${0:${VISUAL}}
.\end{abstract}
endsnippet

snippet tab "tabular / array environment" b
	\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
	$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}

	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
		$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet



########
# MATH # 
########                                   

context "math()"
snippet ext "exists" iA
\exists
endsnippet

context "math()"
snippet nex "nexisit" iA
\nexists
endsnippet

context "math()"
snippet fal "forall" iA
\forall
endsnippet

snippet cc "subset" w
\subset 
endsnippet

snippet inn "in " w
\in 
endsnippet

snippet Nn "cap" w
\cap 
endsnippet        

snippet UU "cup" w
\cup 
endsnippet

snippet uuu "bigcup" w
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" w
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet HH "H" w
\mathbb{H}
endsnippet

snippet DD "D" w
\mathbb{D}
endsnippet

snippet RR "R" w
\mathbb{R}
endsnippet

snippet inmath "Inline Math" w
\\(${1}\\) $0
endsnippet

snippet dm "Display Math" w
\[
	${1:${VISUAL}}
\]$0
endsnippet

snippet frac "Fraction" w
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet compl "Complement"
^{c}
endsnippet

snippet ss "Super Script" i
^{$1}$0
endsnippet

snippet __ "subscript" Aw
_{$1}$0
endsnippet

context "math()"
snippet txt "Text" iA
\text{${1:${VISUAL}}}$0
endsnippet

snippet rz "Square Root" wi
\sqrt{${1:${VISUAL}}}$0
endsnippet

snippet rzo "... Root" wi
\sqrt[$1]{${2:${VISUAL}}}$0
endsnippet

snippet bf "Bold" wi
\textbf{${1:${VISUAL}}}$0      
endsnippet

snippet it "Italic" wi
\textit{${1:${VISUAL}}}$0                                
endsnippet


snippet un "Underline" wi
\underline{${1:${VISUAL}}}$0
endsnippet

snippet rm "Text" wi
\rm{${1:${VISUAL}}}$0
endsnippet

snippet itm "Item" wi
\item ${0:${VISUAL}}
endsnippet

snippet ceil "Ceil" w
\left\lceil $1 \right\rceil $0
endsnippet

snippet floor "Floor" w
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "Pmat" w
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "Bmat" w
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

snippet () "Left( right)" w
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet [] "Left[ right]" w
\left[ ${1:${VISUAL}} \right] $0
endsnippet   

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet
                                 
snippet lr] "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" wi
\left<${1:${VISUAL}} \right>$0
endsnippet

snippet conj "conjugate" w
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

snippet ooo "\infty" w
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet => "Implies" w
\implies
endsnippet

snippet =< "Implied by" w
\impliedby
endsnippet

snippet iff "iff" w
\iff
endsnippet

context "math()"
snippet == "Equals" Aw
&= $1 \\\\ $0
endsnippet

snippet != "Not Equal" w
\neq 
endsnippet

snippet <= "leq" Aw
\le 
endsnippet

snippet >= "geq" Aw
\ge 
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

snippet lll "l" Aw
\ell
endsnippet

snippet xx "cross" Aw
\times 
endsnippet

snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp|tau|mu|sigma|xi|tan)' "ln" rw
\\`!p snip.rv = match.group(1)`
endsnippet

snippet <! "normal" Aw
\triangleleft 
endsnippet

snippet "(\d|\w)+invs" "inverse" Awr
`!p snip.rv = match.group(1)`^{-1}
endsnippet

snippet !> "mapsto" Aw
\mapsto 
endsnippet

##########
# TABLES #
#########

pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet


###########
# POSTFIX #
###########

snippet bar "bar" wi 
\bar{${1:${VISUAL}}}$0
endsnippet

snippet "\<(.*?)\|" "bra" wri
\bra{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

snippet "\|(.*?)\>" "ket" wri
\ket{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

snippet "(.*)\\bra{(.*?)}([^\|]*?)\>" "braket" Awri
`!p snip.rv = match.group(1)`\braket{`!p snip.rv = match.group(2)`}{`!p snip.rv = match.group(3).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet


#############
# PRE-AMBLE #
#############

snippet pac "usepackage - removes square braces if options removed" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

snippet docls "Document Class" bA
\documentclass{$1}$0
endsnippet

snippet tmplt "Template"
\documentclass{article}

\usepackage{import}
\usepackage{pdfpages}
\usepackage{transparent}
\usepackage{xcolor}
$1

\newcommand{\incfig}[2][1]{%
		\def\svgwidth{#1\columnwidth}
		\import{./figures/}{#2.pdf_tex}
}
$2
\pdfsuppresswarningpagegroup=1

\begin{document}
		$0
\end{document}
endsnippet


#########
# OTHER #
#########

snippet acl "Acroynm expanded" bi
\acl{${1:acronym}}
endsnippet

snippet ac "Acroynm normal" bi
\ac{${1:acronym}}
endsnippet

snippet ni "Non-indented paragraph" bi
\noindent
endsnippet


############
# SECTIONS #
############

snippet chap "Chapter" wi
\chapter{$1${VISUAL}}
endsnippet

snippet sec "Section" wi
\section{$1${VISUAL}}
endsnippet

snippet sec* "Section*" wi
\section*{$1${VISUAL}}
endsnippet

snippet sub "Subsection" wi
\subsection{$1${VISUAL}}
endsnippet

snippet sub* "Subsection*" wi
\subsection*{$1${VISUAL}}
endsnippet

snippet subsub "Subsection" wi
\subsubsection{$1${VISUAL}}
endsnippet

snippet subsub* "Subsubsection" wi
\subsubsection*{$1${VISUAL}}
endsnippet

snippet par "Paragraph" wi
\paragraph{$1${VISUAL}}
endsnippet

snippet par* "Paragraph*" wi
\paragraph*{$1${VISUAL}}
endsnippet

snippet subpar "Sub Paragraph" wi
\subparagraph{$1${VISUAL}}
endsnippet

snippet subpar* "Sub Paragraph*" wi
\subparagraph*{$1${VISUAL}}
endsnippet

# vim:ft=snippets:

snippet ao "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
$$
$1
$$
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet
context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet may "mayor"
>
endsnippet

context "math()"
snippet men "menor"
<
endsnippet

context "math()"
snippet igual "igual"
=
endsnippet


snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

priority 10
snippet "bar" "bar"
\overline{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet
    

priority 10
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet 

context "math()"
snippet sim "~" iA
\sim 
endsnippet  

context "math()"
snippet mid "mid" iA
 \mid 
endsnippet

context "math()"
snippet ind "indices" iA
${1:i} = 1,${2:2},\dots,${3:n}
endsnippet

context "math()"
snippet pi "Pi" iA
\pi
endsnippet

context "math()"
snippet quad "\quad" iA
\quad
endsnippet

context "math()"
snippet omega "\omega" iA
\omega
endsnippet

context "math()"
snippet gamma "\gamma" iA
\gamma
endsnippet

context "math()"
snippet veps "\varepsilon" iA
\varepsilon
endsnippet

context "math()"
snippet alp "\alpha" iA
\alpha
endsnippet

context "math()"
snippet beta "\beta" iA
\beta
endsnippet

context "math()"
snippet ji "\chi" iA
\chi
endsnippet

context "math()"
snippet plt "\therefore" iA
\therefore
endsnippet

context "math()"
snippet alig "aligned"
\begin{aligned}
  ${1:${VISUAL}}$0 
\end{aligned}
endsnippet

context "math()"
snippet oper "aligned" iA
\operatorname{$0}
endsnippet

##Coding##
snippet lst "lstlisting"
\begin{lstlisting}[language=${1:Python}, caption=${2:Ejemplo codigo}]
${0:}
\end{lstlisting}
endsnippet

context "math()"
snippet vfi "\varphi" iA
\varphi
endsnippet

context "math()"
snippet dot "\dot" iA
\dot{$1}$0
endsnippet

context "math()"
snippet ddot "\ddot" iA
\ddot{$1}$0 
endsnippet

context "math()"
snippet derie "derivadaE" iA
\left. \frac{d${1:f}}{d${2:x}} \right|_{${3:x=${4:}}} =
endsnippet

context "math()"         
snippet partiale "pderivadaE" iA
\left. \frac{\partial ${1:f}}{\partial ${2:x}} \right|_{${3:x=${4:}}} =
endsnippet

context "math()"
snippet ,, ",\" iA
, \
endsnippet

context "math()"
snippet eq "\equiv"
\equiv
endsnippet

context "math()"
snippet lmb "\lambda" iA
\lambda
endsnippet

context "math()"
snippet eta "\eta"
\eta
endsnippet
